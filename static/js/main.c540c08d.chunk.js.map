{"version":3,"sources":["context/alert/AlertContext.js","context/firebase/firebaseContext.js","components/Form.jsx","components/Notes.js","components/Loader.jsx","pages/Home.js","pages/About.js","components/Navbar.jsx","components/Alert.jsx","context/types.js","context/alert/alertReducer.js","context/alert/AlertState.jsx","context/firebase/firebaseReducer.js","context/firebase/FirebaseState.js","App.js","reportWebVitals.js","index.js"],"names":["AlertContext","createContext","FirebaseContext","Form","useState","value","setValue","alert","useContext","firebase","onSubmit","event","preventDefault","trim","addNote","then","show","catch","className","type","placeholder","onChange","e","target","Notes","notes","onRemove","TransitionGroup","component","map","note","CSSTransition","classNames","timeout","title","date","onClick","id","Loader","role","Home","loading","fetchNotes","removeNote","useEffect","About","Navbar","to","exact","Alert","hide","in","visible","enter","exit","mountOnEnter","unmountOnExit","text","aria-label","SHOW_ALERT","HIDE_ALERT","SHOW_LOADER","ADD_NODE","FETCH_NOTES","REMOVE_NOTE","handlers","state","payload","alertReducer","action","DEFAULT","AlertState","children","useReducer","dispatch","Provider","filter","firebaseReducer","url","process","FirebaseState","showLoader","a","axios","get","res","Object","keys","data","key","Date","toJSON","post","name","Error","message","delete","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c540c08d.chunk.js","sourcesContent":["import {createContext} from \"react\";\r\n\r\nexport const AlertContext = createContext()\r\n","import {createContext} from \"react\";\r\n\r\nexport const FirebaseContext = createContext();\r\n","import React, {useState, useContext} from \"react\";\r\nimport {AlertContext} from \"../context/alert/AlertContext\";\r\nimport {FirebaseContext} from \"../context/firebase/firebaseContext\";\r\n\r\nexport const Form = () => {\r\n    const [value, setValue] = useState('')\r\n    const alert = useContext(AlertContext)\r\n    const firebase = useContext(FirebaseContext)\r\n\r\n    const submitHandler = event => {\r\n        event.preventDefault()\r\n\r\n        if(value.trim()){\r\n            firebase.addNote(value.trim()).then(() => {\r\n                alert.show('The note be create', 'success')\r\n            }).catch(() => {\r\n                alert.show('Something went wrong ', 'danger')\r\n            })\r\n            setValue('')\r\n        } else {\r\n            alert.show('Entry name note')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder='Entry name the note...'\r\n                    value={value}\r\n                    onChange={e => setValue(e.target.value)}\r\n                />\r\n\r\n\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group'\r\n\r\nexport const Notes = ({notes, onRemove}) => {\r\n    return (\r\n        <TransitionGroup component='ul' className='list-group'>\r\n            {notes.map(note => (<CSSTransition\r\n                    key={note.id}\r\n                    classNames = 'note'\r\n                    timeout={800}\r\n                >\r\n                    <li className='list-group-item note'>\r\n                        <div>\r\n                            <strong>{note.title}</strong>\r\n                            <small>{note.date}</small>\r\n                        </div>\r\n                        <button\r\n                            className='btn btn-outline-danger btn-sm'\r\n                            onClick={() => onRemove(note.id)}\r\n                        >\r\n                            &times;\r\n                        </button>\r\n                    </li>\r\n                </CSSTransition>\r\n            ))}\r\n        </TransitionGroup>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport const Loader = () => {\r\n    return (\r\n        <div className='text-center'>\r\n            <div className='spinner-border' role='status'>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {Fragment, useContext, useEffect} from \"react\";\r\nimport {Form} from \"../components/Form\";\r\nimport {Notes} from \"../components/Notes\";\r\nimport {FirebaseContext} from \"../context/firebase/firebaseContext\";\r\nimport {Loader} from \"../components/Loader\";\r\n\r\nexport const Home = () => {\r\n    const {loading, notes, fetchNotes, removeNote} = useContext(FirebaseContext);\r\n\r\n    useEffect(() => {\r\n        fetchNotes()\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n            <Form/>\r\n\r\n            <hr/>\r\n            {loading\r\n                ? <Loader/>\r\n                : <Notes notes={notes} onRemove={removeNote}/>\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport const About = () => {\r\n    return(\r\n        <div className=\"jumbotron bg-light p-5\">\r\n            <div className=\"container\">\r\n                <h1 className=\"display-4\">The best React app</h1>\r\n                <p className=\"lead\">\r\n                    Version app <strong>1.0.9</strong>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className='navbar navbar-dark navbar-expand-lg bg-dark'>\r\n            <div className=\"navbar-brand ms-3\">\r\n                GenApp\r\n            </div>\r\n            <ul className='navbar-nav'>\r\n                <li className='nav-item'>\r\n                    <NavLink className='nav-link' to=\"/\" exact>\r\n                        Main\r\n                    </NavLink>\r\n                </li>\r\n                <li className='nav-item'>\r\n                    <NavLink className='nav-link' to=\"/about\">\r\n                        Info\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n","import React, {useContext} from \"react\";\r\nimport {CSSTransition} from 'react-transition-group'\r\nimport {AlertContext} from \"../context/alert/AlertContext\";\r\n\r\nexport const Alert = () => {\r\n    const {alert, hide} = useContext(AlertContext)\r\n\r\n    return (\r\n        <CSSTransition\r\n            in={alert.visible}\r\n            timeout={{\r\n                enter: 500,\r\n                exit: 250,\r\n            }}\r\n            classNames={'alert'}\r\n            mountOnEnter\r\n            unmountOnExit\r\n        >\r\n            <div className={`alert alert-${alert.type || 'warning'} alert-dismissible`}>\r\n                <strong>Warning!</strong>&nbsp; {alert.text}\r\n                <button onClick={hide} type=\"button\" className=\"btn-close btn-sm\" aria-label=\"Close\">\r\n                </button>\r\n            </div>\r\n        </CSSTransition>\r\n    )\r\n}\r\n","export const SHOW_ALERT = 'SHOW_ALERT';\r\nexport const HIDE_ALERT = 'HIDE_ALERT';\r\n\r\nexport const SHOW_LOADER = 'SHOW_LOADER';\r\nexport const ADD_NODE = 'ADD_NODE';\r\nexport const FETCH_NOTES = 'FETCH_NOTES';\r\nexport const REMOVE_NOTE = 'REMOVE_NOTE';\r\n","import {HIDE_ALERT, SHOW_ALERT} from \"../types\";\r\n\r\nconst handlers = {\r\n    [SHOW_ALERT]: (state, {payload}) => ({...payload, visible: true}),\r\n    [HIDE_ALERT]: (state) => ({...state, visible: false}),\r\n    DEFAULT: state => state\r\n}\r\n\r\nexport const alertReducer = (state, action) => {\r\n    const handle = handlers[action.type] || handlers.DEFAULT\r\n    return handle(state, action)\r\n}\r\n","import React, {useReducer} from 'react'\r\nimport {AlertContext} from \"./AlertContext\";\r\nimport {alertReducer} from \"./alertReducer\";\r\nimport {HIDE_ALERT, SHOW_ALERT} from \"../types\";\r\n\r\nexport const AlertState = ({children}) => {\r\n    const [state, dispatch] = useReducer(alertReducer, {visible: false})\r\n\r\n    const show = (text, type = 'warning') => {\r\n        dispatch({\r\n            type: SHOW_ALERT,\r\n            payload: {text, type}\r\n        })\r\n    }\r\n\r\n    const hide = () => {\r\n        dispatch({\r\n            type: HIDE_ALERT,\r\n        })\r\n    }\r\n\r\n    return (\r\n     <AlertContext.Provider value={{\r\n         show,\r\n         hide,\r\n         alert: state\r\n     }}>\r\n         {children}\r\n     </AlertContext.Provider>\r\n    )\r\n}\r\n","import {ADD_NODE, FETCH_NOTES, REMOVE_NOTE, SHOW_LOADER} from \"../types\";\r\n\r\nconst handlers = {\r\n    [SHOW_LOADER]: (state) => ({...state, loading: true}),\r\n    [ADD_NODE]: (state, {payload}) => ({\r\n        ...state,\r\n        notes: [...state.notes, payload]\r\n    }),\r\n    [FETCH_NOTES]: (state, {payload}) => ({\r\n        ...state,\r\n        notes: payload,\r\n        loading: false,\r\n    }),\r\n    [REMOVE_NOTE]: (state, {payload}) => ({\r\n        ...state,\r\n        notes: state.notes.filter(note => note.id !== payload)\r\n\r\n    }),\r\n    DEFAULT: state => state\r\n}\r\n\r\nexport const firebaseReducer = (state, action) => {\r\n    const handle = handlers[action.type] || handlers.DEFAULT\r\n    return handle(state, action)\r\n}\r\n\r\n","import React, {useReducer} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FirebaseContext} from \"./firebaseContext\";\r\nimport {firebaseReducer} from \"./firebaseReducer\";\r\nimport {ADD_NODE, FETCH_NOTES, REMOVE_NOTE, SHOW_LOADER} from \"../types\";\r\n\r\nconst url = process.env.REACT_APP_DB_URL\r\n\r\nexport const FirebaseState = ({children}) => {\r\n\r\n    const initialState = {\r\n        notes: [],\r\n        loading: false,\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(firebaseReducer, initialState)\r\n\r\n    const showLoader = () => dispatch({type: SHOW_LOADER})\r\n\r\n    const fetchNotes = async () => {\r\n\r\n        showLoader()\r\n\r\n        const res = await axios.get(`${url}/notes.json`)\r\n\r\n        const payload = Object.keys(res.data).map(key => {\r\n            return{\r\n                ...res.data[key],\r\n                id: key\r\n            }\r\n        })\r\n\r\n        dispatch({\r\n            type: FETCH_NOTES,\r\n            payload\r\n        })\r\n\r\n    }\r\n\r\n\r\n    const addNote = async (title) => {\r\n        const note = {\r\n            title,\r\n            date: new Date().toJSON()\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post(`${url}/notes.json`, note)\r\n            const payload = {\r\n                ...note,\r\n                id: res.data.name\r\n            }\r\n            dispatch({\r\n                type: ADD_NODE,\r\n                payload,\r\n            })\r\n        } catch (e) {\r\n            throw new Error(e.message)\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const removeNote = async (id) => {\r\n        await axios.delete(`${url}/notes/${id}.json`)\r\n        dispatch({\r\n            type: REMOVE_NOTE,\r\n            payload: id,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <FirebaseContext.Provider value={{\r\n            showLoader, addNote, removeNote, fetchNotes,\r\n            loading: state.loading,\r\n            notes: state.notes,\r\n        }}>\r\n            {children}\r\n        </FirebaseContext.Provider>\r\n    )\r\n}\r\n","import React from \"react\";\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport {Home} from './pages/Home'\nimport {About} from './pages/About'\nimport {Navbar} from \"./components/Navbar\";\nimport {Alert} from \"./components/Alert\";\nimport {AlertState} from \"./context/alert/AlertState\";\nimport {FirebaseState} from \"./context/firebase/FirebaseState\";\n\nfunction App() {\n    return (\n        <FirebaseState>\n            <AlertState>\n                <BrowserRouter>\n                    <Navbar/>\n                    <div className=\"container pt-4\">\n                        <Alert/>\n                        <Switch>\n                            <Route path={'/'} exact component={Home}/>\n                            <Route path={'/about'} component={About}/>\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </AlertState>\n        </FirebaseState>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}